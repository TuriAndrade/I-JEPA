import os


def default_ijepa_trainer(
    encoder,
    encoder_config,
    predictor,
    predictor_config,
    batch_collator,
    batch_collator_config,
    hdf5_dataset_train_config,
    hdf5_dataset_val_config,
    model_name="ijepa",
    train_data_frac=1,
    val_data_frac=1,
    batch_size=128,
    epochs=300,
    warmup_epochs=40,
    save_path=os.path.join(os.environ.get("output_dir"), "ijepa"),
    master_addr=os.environ.get("default_addr"),
    master_port=os.environ.get("default_port"),
):
    return {
        "encoder": encoder,
        "encoder_config": encoder_config,
        "predictor": predictor,
        "predictor_config": predictor_config,
        "batch_collator": batch_collator,
        "batch_collator_config": batch_collator_config,
        "model_name": model_name,
        "hdf5_dataset_train_config": hdf5_dataset_train_config,
        "train_data_frac": train_data_frac,
        "hdf5_dataset_val_config": hdf5_dataset_val_config,
        "val_data_frac": val_data_frac,
        "save_path": save_path,
        "params_to_save": "all",
        "local_best_window": 10,
        "seed": 42,
        "batch_size": batch_size,
        "epochs": epochs,
        "start_lr": 2e-4,
        "ref_lr": 1e-3,
        "final_lr": 1e-6,
        "wd": 0.04,
        "final_wd": 0.04,
        "ipe_scale": 1.0,
        "ema": [0.996, 1.0],
        "warmup_epochs": warmup_epochs,
        "opt_config": {},
        "master_addr": master_addr,
        "master_port": master_port,
        "backend": "nccl",
        "main_device": 0,
        "process_timeout": 100000,
    }


def default_classification_trainer(
    model,
    model_config,
    batch_collator,
    batch_collator_config,
    hdf5_dataset_train_config,
    hdf5_dataset_val_config,
    load_pretrained_path=None,
    model_name="classifier",
    train_data_frac=1,
    val_data_frac=1,
    batch_size=128,
    epochs=300,
    warmup_epochs=40,
    save_path=os.path.join(os.environ.get("output_dir"), "classifier"),
    master_addr=os.environ.get("default_addr"),
    master_port=os.environ.get("default_port"),
    seed=42,
):
    return {
        "model": model,
        "model_config": model_config,
        "batch_collator": batch_collator,
        "batch_collator_config": batch_collator_config,
        "model_name": model_name,
        "load_pretrained_path": load_pretrained_path,
        "hdf5_dataset_train_config": hdf5_dataset_train_config,
        "train_data_frac": train_data_frac,
        "hdf5_dataset_val_config": hdf5_dataset_val_config,
        "val_data_frac": val_data_frac,
        "save_path": save_path,
        "params_to_save": "all",
        "seed": seed,
        "batch_size": batch_size,
        "epochs": epochs,
        "start_lr": 2e-4,
        "ref_lr": 1e-3,
        "final_lr": 1e-6,
        "wd": 0.04,
        "final_wd": 0.04,
        "ipe_scale": 1.0,
        "warmup_epochs": warmup_epochs,
        "opt_config": {},
        "master_addr": master_addr,
        "master_port": master_port,
        "backend": "nccl",
        "main_device": 0,
        "process_timeout": 100000,
    }
